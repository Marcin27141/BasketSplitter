Ocado Basket Splitter
Komponenty biblioteki:
•	BasketSplitter – główna klasa biblioteki. Zawiera publiczną metodę split wywoływaną przez klientów. Algorytm znajdywania najlepszego rozwiązania jest rekurencyjny – dla x dostępnych możliwości dostawy produktów, dla każdej możliwości y ze zbioru x znajdujemy najlepsze rozwiązanie i zwracamy rozwiązanie o najwyższej jakości. Znalezienie najlepszego rozwiązania dla metody dostawy x należącej do zbioru y polega na znalezieniu najlepszego rozwiązania dla pozostałych metod dostawy (y bez metody x) i produktów, których nie można dostarczyć metodą x – po znalezieniu takiego wyniku dołącza się do niego częściowe rozwiązanie x.
o	Konstruktor – klasa przyjmuje w konstruktorze ścieżkę do pliku konfiguracyjnego. Jako że w zadaniu zostało określone, że plik ten nie zmienia się zbyt często, zamiast wczytywać jego zawartość przy każdym wywołaniu metody split jest to robione w konstruktorze. W konsekwencji konstruktor może rzucić wyjątek ConfigurationException dla nieistniejącego lub niepoprawnie sformatowanego pliku.
o	Metoda split – zwraca mapę będącą wynikiem optymalizacji dla podanych w jej parametrze produktów (lista String). Metoda może rzucić wyjątek IncompleteConfigurationException, jeśli któryś z podanych na liście wejściowej produktów nie znajdował się na wczytanej w konstruktorze liście konfiguracyjnej.
•	ConfigurationReader – klasa, z której korzysta BasketSplitter w celu wczytania konfiguracji z pliku. Rzuca wyjątke ConfigurationException w wypadku nieistnienia pliku, niepoprawnego sformatowania lub wystąpienia produktów, dla których nie określono żadnej opcji dostawy.
•	BasketSolution – reprezentuje rozwiązanie (lokalne lub globalne) algorytmu optymalizacyjnego. Przechowuje mapę do odwzorowania, jakie metody dostawy wykorzystano dla poszczególnych produktów.
o	Konstruktor - Aby uniknąć przeszukiwania mapy za każdym razem, gdy rozwiązanie jest tworzone, w konstruktorze oprócz mapy przekazywany jest także rozmiar największej grupy produktów.
o	Metoda isBetterThan – metoda służąca do porównywania jakości rozwiązań. W pierwszej kolejności porównuje liczbę wykorzystanych sposobów dostawy (im mniej, tym lepiej), w drugiej kolejności rozmiar największej grupy (im więcej, tym lepiej)
o	Metoda getSolutionWithAdditionalGroup – metoda tworząca złączone rozwiązanie po rekursywnym znalezieniu najlepszego rozwiązania dla pozostałych metod. Mapa jest aktualizowana tylko wtedy, gdy lista produktów nie jest pusta.
•	Wyjątki – ConfigurationException, IncompleteConfigurationException